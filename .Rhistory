textplot_wordcloud(text_plot, min.freq = 50, color = text_col)
textplot_wordcloud(positive_sentiment_plot, min.freq = 50, color = text_col)
title("Positive Tweet Wordcloud (Word Frequency of 50)", col.main = "grey14")
neigh <- table(burrito$Neighborhood)
setwd("C:\\Users\\ericv\\OneDrive\\Documents\\MATH 303")
burrito <- read.csv("C:\\Users\\ericv\\OneDrive\\Documents\\MATH 303\\burrito.csv")
neigh <- table(burrito$Neighborhood)
barplot(neigh)
?barplot
barplot(neigh,
horiz = TRUE,
col = terrain.colors(1:nrow(neigh)))
barplot(neigh,
horiz = TRUE,
col = terrain.colors(6))
barplot(neigh,
horiz = TRUE,
col = terrain.colors(19))
barplot(neigh,
horiz = TRUE,
col = terrain.colors(28))
barplot(neigh,
horiz = TRUE,
col = terrain.colors(50))
?barplot
barplot(neigh,
horiz = TRUE,
col = terrain.colors(50),
angle = 90)
barplot(neigh,
horiz = TRUE,
col = terrain.colors(50),
angle = 45)
?barplot
barplot(neigh,
horiz = TRUE,
col = terrain.colors(50),
ylim = c(0,50))
barplot(neigh,
horiz = TRUE,
col = terrain.colors(50),
xlim = c(0,50))
neigh <- sort(neigh)
barplot(neigh,
horiz = TRUE,
col = terrain.colors(50),
xlim = c(0,50))
burrito <- read.csv("C:\\Users\\ericv\\OneDrive\\Documents\\MATH 303\\burrito_clean.csv")
neigh <- table(burrito$Neighborhood)
neigh <- sort(neigh)
barplot(neigh,
horiz = TRUE,
col = terrain.colors(50),
xlim = c(0,50))
?barplot
barplot(neigh,
horiz = TRUE,
col = terrain.colors(50),
xlim = c(0,50),
las = 2)
barplot(neigh,
horiz = TRUE,
col = terrain.colors(50),
xlim = c(0,50),
las = 2,
main = "Burritos Per Neighborhood")
neigh
burrito$wouldRecommend <- ifelse(burrito$wouldRecommend == "Yes" | burrito$wouldRecommend == "Y" , 1, 0)
burrito$wouldRecommend
neigh_wr <- table(burrito$Neighborhood, burrito$wouldRecommend)
neigh_wr
?table
neigh_wr <- table(burrito$Neighborhood, burrito$wouldRecommend, row.names(burrito$Neighborhood))
neigh_wr <- table(burrito$Neighborhood, burrito$wouldRecommend, dnn = c("wouldNotRecommend", "wouldRecommend"))
neigh_wr
neigh_wr <- table(burrito$Neighborhood, burrito$wouldRecommend, dnn = c("Neighborhood", "wouldRecommend"))
neigh_wr
burr <- table(burrito$Burrito)
burr <- sort(burr)
barplot(burr,
horiz = TRUE,
col = heat.colors(50),
xlim = c(0,50),
las = 2,
main = "Burritos Per Neighborhood")
?barplot
burr
burr <- sort(burr)
burr
burr <- sort(burr, decreasing = TRUE)
burr
barplot(burr[1:10],
horiz = TRUE,
col = heat.colors(50),
xlim = c(0,50),
las = 2,
main = "Most Frequent Burritos")
barplot(burr[1:10],
horiz = TRUE,
col = heat.colors(50),
xlim = c(0,75),
las = 2,
main = "Most Frequent Burritos")
barplot(burr[1:10],
horiz = TRUE,
col = heat.colors(50),
xlim = c(0,100),
las = 2,
main = "Most Frequent Burritos")
burr <- sort(burr)
barplot(burr[1:10],
horiz = TRUE,
col = heat.colors(50),
xlim = c(0,100),
las = 2,
main = "Most Frequent Burritos")
burr <- sort(burr, decreasing = TRUE)
barplot(burr[1:10],
horiz = TRUE,
col = heat.colors(50),
xlim = c(0,100),
las = 2,
main = "Most Frequent Burritos")
write.csv(burrito, "burrito_cleaned.csv")
install.packages("pander")
?barplot
?write.csv
write.csv(burrito, "burrito_cleaned.csv, na = "")
write.csv(burrito, "burrito_cleaned.csv", na = "")
write.csv(burrito, "burrito_cleaned.csv", na = "")
burrito$beef <- ifelse(burrito$beef == "X" | burrito$beef == "x" , 1, 0)
write.csv(burrito, "burrito_cleaned.csv", na = "")
burrito$Beef <- ifelse(burrito$Beef == "X" | burrito$Beef == "x" , 1, 0)
write.csv(burrito, "burrito_cleaned.csv", na = "")
burrito$Beef <- ifelse(burrito$Pico == "X" | burrito$Pico == "x" , 1, 0)
write.csv(burrito, "burrito_cleaned.csv", na = "")
write.csv(burrito, "burrito_cleaned.csv", na = "")
burrito$Beef <- ifelse(burrito$Beef == "X" | burrito$Beef == "x" , 1, 0)
burrito$Pico <- ifelse(burrito$Pico == "X" | burrito$Pico == "x" , 1, 0)
write.csv(burrito, "burrito_cleaned.csv", na = "")
burrito$Guac <- ifelse(burrito$Guac == "X" | burrito$Guac == "x" , 1, 0)
write.csv(burrito, "burrito_cleaned.csv", na = "")
burrito$Cheese <- ifelse(burrito$Cheese == "X" | burrito$Cheese == "x" , 1, 0)
burrito$Fries <- ifelse(burrito$Fries == "X" | burrito$Fries == "x" , 1, 0)
burrito$Sour.cream <- ifelse(burrito$Sour.cream== "X" | burrito$Sour.cream == "x" , 1, 0)
burrito$Pork <- ifelse(burrito$Pork == "X" | burrito$Pork == "x" , 1, 0)
burrito$Chicken <- ifelse(burrito$Chicken == "X" | burrito$Chicken == "x" , 1, 0)
burrito$Shrimp <- ifelse(burrito$Shrimp == "X" | burrito$Shrimp == "x" , 1, 0)
burrito$Fish <- ifelse(burrito$Fish == "X" | burrito$Fish == "x" , 1, 0)
burrito$Rice <- ifelse(burrito$Rice == "X" | burrito$Rice == "x" , 1, 0)
burrito$Beans <- ifelse(burrito$Beans == "X" | burrito$Beans == "x" , 1, 0)
burrito$Lettuce <- ifelse(burrito$Lettuce == "X" | burrito$Lettuce == "x" , 1, 0)
burrito$Tomato <- ifelse(burrito$Tomato == "X" | burrito$Tomato == "x" , 1, 0)
burrito$Bell.peper <- ifelse(burrito$Bell.peper == "X" | burrito$Bell.peper == "x" , 1, 0)
burrito$Carrots <- ifelse(burrito$Carrots == "X" | burrito$Carrots == "x" , 1, 0)
burrito$Cabbage <- ifelse(burrito$Cabbage == "X" | burrito$Cabbage == "x" , 1, 0)
burrito$Sauce <- ifelse(burrito$Sauce == "X" | burrito$Sauce == "x" , 1, 0)
burrito$Salsa.1 <- ifelse(burrito$Salsa.1 == "X" | burrito$Salsa.1 == "x" , 1, 0)
burrito$Cilantro <- ifelse(burrito$Cilantro == "X" | burrito$Cilantro == "x" , 1, 0)
burrito$Onion <- ifelse(burrito$Onion == "X" | burrito$Onion == "x" , 1, 0)
burrito$Taquito <- ifelse(burrito$Taquito == "X" | burrito$Taquito == "x" , 1, 0)
burrito$Pineapple <- ifelse(burrito$Pineapple == "X" | burrito$Pineapple == "x" , 1, 0)
burrito$Ham <- ifelse(burrito$Ham == "X" | burrito$Ham == "x" , 1, 0)
burrito$Chile.relleno <- ifelse(burrito$Chile.relleno == "X" | burrito$Chile.relleno == "x" , 1, 0)
burrito$Nopales <- ifelse(burrito$Nopales == "X" | burrito$Nopales == "x" , 1, 0)
burrito$Lobster <- ifelse(burrito$Lobster == "X" | burrito$Lobster == "x" , 1, 0)
table(burrito$Neighborhood)
table(burrito$Restaurant)
table(burrito$Location)
burrito$Queso <- ifelse(burrito$Queso == "X" | burrito$Queso == "x" , 1, 0)
burrito$Egg <- ifelse(burrito$Egg == "X" | burrito$Egg == "x" , 1, 0)
burrito$Mushroom <- ifelse(burrito$Mushroom == "X" | burrito$Mushroom == "x" , 1, 0)
table(Burrito$burrito)
table(burrito$Burrito)
barplot(burr[1:10],
horiz = TRUE,
col = heat.colors(50),
xlim = c(0,100),
las = 2,
main = "Most Frequent Burritos")
burrito$Sushi <- ifelse(burrito$Sushi == "X" | burrito$Sushi == "x" , 1, 0)
burrito$Avocado <- ifelse(burrito$Avocado == "X" | burrito$Avocado == "x" , 1, 0)
burrito$Corn <- ifelse(burrito$Corn == "X" | burrito$Corn == "x" , 1, 0)
burrito$Zucchini <- ifelse(burrito$Zucchini == "X" | burrito$Zucchini == "x" , 1, 0)
write.csv(burrito, "burrito_cleaned.csv", na = "")
write.csv(burrito, "burrito_cleaned.csv", na = "")
#Read in csv
Tweets <- read.csv("Tweets.csv", header = TRUE, na.strings=c("", "NA"))
#Set working directory
setwd("C:\\Users\\ericv\\OneDrive\\Documents\\MGSC410")
# Necessary Libraries
library(ggplot2)
library(RTextTools)
library(tidytext)
library(quanteda)
library(RColorBrewer)
#Read in csv
Tweets <- read.csv("Tweets.csv", header = TRUE, na.strings=c("", "NA"))
#find strutre of Tweets
str(Tweets)
#Summary statistics
summary(Tweets)
#find strutre of Tweets
str(Tweets)
#find structre of Tweets
str(Tweets)
Tweets$airline_sentiment_gold
table(airline_sentiment_gold)
table(Tweets$airline_sentiment_gold)
40/14640
table(Tweets$negativereason_gold)
str(Tweets$retweet_count)
summary(Tweets$retweet_count)
table(Tweets$retweet_count)
13873/14640
unique(Tweets$tweet_coord)
min(Tweets$tweet_created)
#####################################
######EXPLORATORY DATA ANALYSIS######
#####################################
a <- sort(Tweets$tweet_created)
a
#####################################
######EXPLORATORY DATA ANALYSIS######
#####################################
a <- sort(Tweets$tweet_created, decreasing = FALSE)
a
#####################################
######EXPLORATORY DATA ANALYSIS######
#####################################
a <- sort(Tweets$tweet_created, decreasing = TRUE)
a
Tweets$tweet_location
air_sent_plot
#Read in csv
Tweets <- read.csv("Tweets.csv", header = TRUE, na.strings=c("", "NA"))
#Summary statistics
summary(Tweets)
#Airline Sentiment Plot
air_sent_plot <- ggplot(Tweets, aes(airline_sentiment)) + geom_bar(fill = c("red", "green", "blue"), color = "black") + ylim(c(0,10000)) + ggtitle("Count of Sentiments") + xlab("Airline Sentiment")
air_sent_plot
#Airline Sentiment Counts
air_sent_counts <- table(Tweets$airline_sentiment)
air_sent_counts
#cross tabulation of airline vs sentiment
air_sent_xtab <- xtabs(~Tweets$airline + Tweets$airline_sentiment, data = Tweets)
air_sent_xtab
#percentage of each airline being negative, neutral, or positive
perc_per_airline <- prop.table(table(Tweets$airline, Tweets$airline_sentiment),1)
perc_per_airline
#cross tabulation of airline vs negative reason
air_neg_reason_xtab <- xtabs(~Tweets$airline + Tweets$negativereason, data = Tweets)
air_neg_reason_xtab
#percentage of each airline's negative reasons
neg_reason_per_airline <- prop.table(table(Tweets$airline, Tweets$negativereason),1)
neg_reason_per_airline
#Airline and airline sentiment
air_vs_air_sent <- ggplot(Tweets, aes(airline,fill = airline_sentiment))
air_vs_air_sent <- air_vs_air_sent + geom_histogram(stat="count", color = "black")
air_vs_air_sent
#percentage of each airline's negative reasons
neg_reason_per_airline <- prop.table(table(Tweets$airline, Tweets$negativereason),1)
neg_reason_per_airline
#Airline and Negative Reason
air_vs_neg_reason <- ggplot(Tweets, aes(airline, fill = negativereason))
air_vs_neg_reason <- air_vs_neg_reason + geom_histogram(stat="count", color = "black")
air_vs_neg_reason
air_vs_air_sent <- air_vs_air_sent + geom_histogram(stat="count", color = "black")
air_vs_air_sent
#cross tabulation of airline vs negative reason
air_neg_reason_xtab <- xtabs(~Tweets$airline + Tweets$negativereason, data = Tweets)
air_neg_reason_xtab
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negative_reason)) + geom_histogram(stat="count", color = "black")
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negative_reason)) + geom_bar(stat="count", color = "black")
negative_reason
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negative_reason)) + geom_histogram(stat="count", color = "black")
negative_reason
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negative_reason)) + geom_bar()
negative_reason
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negativereason)) + geom_bar()
negative_reason
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negativereason)) + geom_bar() + theme(axis.text.x = element_text(angle = 90, hjust = 1))
negative_reason
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negativereason)) + geom_bar(stat="identity", color = "black") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
negative_reason
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negativereason)) + geom_bar(color = "black") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
negative_reason
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negativereason)) + geom_bar(color = "black", fill = terrain.colors(10)) + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ggtitle("Negative Reason Frequency")
negative_reason
?geom_bar
air_vs_air_sent
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negativereason)) + geom_bar(color = "black") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ggtitle("Negative Reason Frequency")
negative_reason
#negative reason plot
negative_reason <- ggplot(Tweets, aes(negativereason)) + geom_bar(color = "black", fill = "purple") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ggtitle("Negative Reason Frequency")
negative_reason
table(Twets$negativereson)
table(Twets$negativeresson)
table(Twets$negativereason)
table(Tweets$negativereason)
air_vs_neg_reason
air_vs_neg_reason
neg_reason_per_airline
# plotting tweets based on timezone
timezone <- table(Tweets$user_timezone)
timezone <- sort(timezone, decreasing = TRUE)
timezone <- head(timezone, 10)
timezone
barplot(timezone,
col = ("thistle3"),
ylim = c(0, 4000),
main = "Most Frequent Tweets per 'Timezone'",
xlab = "General Location",
ylab = "Count")
timezone_plot <- ggplot(Tweets, aes(timezone)) + geom_bar(color = "black", fill = "purple") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ggtitle("Negative Reason Frequency")
ggplot(Tweets, aes(timezone)) + geom_bar(color = "black", fill = "purple") + theme(axis.text.x = element_text(angle = 90, hjust = 1)) + ggtitle("Negative Reason Frequency")
barplot(timezone,
col = ("thistle3"),
ylim = c(0, 4000),
main = "Most Frequent Tweets per 'Timezone'",
xlab = "General Location",
ylab = "Count")
# Most Frequent Twitter Users
users <- table(Tweets$name)
users <- sort(users, decreasing = TRUE)
head(users, 10)
#Find the 15 biggest haters (negative airline_sentiment of 15 or more)
name_vs_airline_sentiment <- table(Tweets$name, Tweets$airline_sentiment)
name_vs_airline_sentiment <- as.data.frame(name_vs_airline_sentiment)
names(name_vs_airline_sentiment) <- c("name", "airline_sentiment", "Frequency")
haters <- haters[order(haters$Frequency, decreasing = TRUE),]
haters <- name_vs_airline_sentiment[(name_vs_airline_sentiment$airline_sentiment=="negative"),]
#subset into a dataframe
haters_top <- haters[1:15,]
haters_top$name <- factor(haters_top$name, levels = haters_top$name[order(haters_top$Frequency, decreasing = TRUE)])
haters_top
haters <- name_vs_airline_sentiment[(name_vs_airline_sentiment$airline_sentiment=="negative"),]
haters <- haters[order(haters$Frequency, decreasing = TRUE),]
#subset into a dataframe
haters_top <- haters[1:15,]
haters_top$name <- factor(haters_top$name, levels = haters_top$name[order(haters_top$Frequency, decreasing = TRUE)])
haters_top
# plot the top 15 haters
ggplot(haters_top, aes(name,Frequency)) + geom_bar(stat = "identity", fill = "red", color = "black") + ggtitle("Most Negative Sentiment Tweets by User") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Find the 15 biggest fans (positive airline_sentiment of 15 or more)
fans <- name_vs_airline_sentiment[(name_vs_airline_sentiment$airline_sentiment=="positive"),]
fans <- fans[order(fans$Frequency, decreasing = TRUE),]
#subset into a dataframe
fans_top <- fans[1:15,]
fans_top$name <- factor(fans_top$name, levels = fans_top$name[order(fans_top$Frequency, decreasing = TRUE)])
fans_top
ggplot(fans_top, aes(name,Frequency)) + geom_bar(stat = "identity", fill = "green", color = "black") + ggtitle("Most Negative Sentiment Tweets by User") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
#Vectorize Text column
text <- as.vector(Tweets$text)
# Create a corpus object
text_corpus <- corpus(text)
# Attaching class labels to the corpus message text
docvars(text_corpus) <- text
# Build wordplot using corpus object
text_plot<-dfm(text_corpus,
tolower = TRUE,
remove_punct = TRUE,
remove_twitter = TRUE,
remove_numbers = TRUE,
remove=stopwords("SMART"))
# assign coloring
text_col <- brewer.pal(10, "BrBG")
# Project Wordcloud
textplot_wordcloud(text_plot, min.freq = 50, color = text_col)
title("Tweet Wordcloud (Word Frequency of 50)", col.main = "grey14")
# Project Wordcloud
textplot_wordcloud(text_plot, min.freq = 75, color = text_col)
title("Tweet Wordcloud (Word Frequency of 75)", col.main = "grey14")
# Project Wordcloud
textplot_wordcloud(text_plot, min.freq = 100, color = text_col)
title("Tweet Wordcloud (Word Frequency of 100)", col.main = "grey14")
#Vectorize Text column
negative_sentiment <- as.vector(Tweets$text[Tweets$airline_sentiment == "negative"])
# Create a corpus object
negative_sentiment_corpus <- corpus(negative_sentiment)
# Build wordplot using corpus object
negative_sentiment_plot<-dfm(negative_sentiment_corpus,
tolower = TRUE,
remove_punct = TRUE,
remove_twitter = TRUE,
remove_numbers = TRUE,
remove=stopwords("SMART"))
# Attaching class labels to the corpus message text
docvars(negative_sentiment_corpus) <- negative_sentiment
# assign coloring
text_col <- brewer.pal(10, "BrBG")
# Project Wordcloud
textplot_wordcloud(negative_sentiment_plot, min.freq = 50, color = text_col)
title("Negative Tweet Wordcloud (Word Frequency of 50)", col.main = "grey14")
#Vectorize Text column
positive_sentiment <- as.vector(Tweets$text[Tweets$airline_sentiment == "positive"])
# Create a corpus object
positive_sentiment_corpus <- corpus(positive_sentiment)
# Attaching class labels to the corpus message text
docvars(positive_sentiment_corpus) <- positive_sentiment
# Project Wordcloud
textplot_wordcloud(positive_sentiment_plot, min.freq = 50, color = text_col)
# Build wordplot using corpus object
positive_sentiment_plot<-dfm(positive_sentiment_corpus,
tolower = TRUE,
remove_punct = TRUE,
remove_twitter = TRUE,
remove_numbers = TRUE,
remove=stopwords("SMART"))
# assign coloring
text_col <- brewer.pal(10, "BrBG")
title("Positive Tweet Wordcloud (Word Frequency of 50)", col.main = "grey14")
summary(analytics)
# Sentiment dummy column
# - 1 for negative values, 0 for neutral, 1 for positive
Tweets$sentiment_value <- ifelse(TweetsSVM$airline_sentiment == "negative", -1,
ifelse(TweetsSVM$airline_sentiment == "positive", 1,
0))
# Training and Testing partition
base_data <- Tweets[1:nrow(Tweets)*0.7, ]
cross_validation_data <- Tweets[as.integer((nrow(Tweets)*0.7)+1):nrow(Tweets)-1, ]
# Document Term Matrix
dtMatrix <- create_matrix(Tweets$text)
# Configure the training data
# Data is pre randomized for sampling
container <- create_container(dtMatrix,
Tweets$sentiment_value,
trainSize=1:as.integer(nrow(base_data)*0.7),
testSize=as.integer((nrow(base_data)*0.7)+1):(nrow(Tweets)-1),
virgin=FALSE)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
# perform predictions
classify <- classify_model(container, model)
# train a SVM Model
model <- train_model(container, "SVM", kernel="linear", cost=1)
air_sent_xtab
#percentage of each airline being negative, neutral, or positive
perc_per_airline <- prop.table(table(Tweets$airline, Tweets$airline_sentiment),1)
perc_per_airline
air_neg_reason_xtab
users <- head(users, 10)
barplot(users)
users
ggplot(fans_top, aes(name,Frequency)) + geom_bar(stat = "identity", fill = "green", color = "black") + ggtitle("Most Positive Sentiment Tweets by User") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
setwd("C:\\Users\\ericv\\OneDrive\\Documents\\MATH 303")
burrito <- read.csv("C:\\Users\\ericv\\OneDrive\\Documents\\MATH 303\\burrito_clean.csv")
setwd("C:\\Users\\ericv\\OneDrive\\Documents\\MATH 303")
burrito <- read.csv("C:\\Users\\ericv\\OneDrive\\Documents\\MATH 303\\burrito_cleaned.csv")
neigh <- table(burrito$Neighborhood)
neigh <- sort(neigh)
barplot(neigh,
horiz = TRUE,
col = terrain.colors(50),
xlim = c(0,50),
las = 2,
main = "Burritos Per Neighborhood")
rm(list=ls())
#-
setwd("C:\\Users\\ericv\\OneDrive\\Documents\\MATH 303")
burrito <- read.csv("C:\\Users\\ericv\\OneDrive\\Documents\\MATH 303\\burrito_cleaned.csv")
neigh <- table(burrito$Neighborhood)
neigh <- sort(neigh)
neigh
neigh <- data.frame(neigh)
neigh
names(neigh) <- c("Neighborhood", "Frequency")
ggplot(neigh, aes(Neighborhood)) + geom_bar(color = "black")
ggplot(neigh, aes(Neighborhood, fill = Frequency)) + geom_bar(color = "black")
ggplot(neigh, aes(Neighborhood, fill = Frequency)) + geom_bar(stat = "identity")
ggplot(neigh, aes(Neighborhood, Frequency)) + geom_bar(stat = "identity")
ggplot(neigh, aes(Neighborhood, Frequency)) + geom_bar(stat = "identity") + ggtitle("Frequency of Burritos per Neighborhood")
ggplot(neigh, aes(Neighborhood, Frequency)) + geom_bar(stat = "identity") + ggtitle("Frequency of Burritos per Neighborhood") theme(axis.text.x = element_text(angle = 90, hjust = 1))
ggplot(neigh, aes(Neighborhood, Frequency)) + geom_bar(stat = "identity") + ggtitle("Frequency of Burritos per Neighborhood") + theme(axis.text.x = element_text(angle = 90, hjust = 1))
?stratified
??stratified
#Sample the data
california_burritos <- burrito[sample(nrow(burrito$Burrito == "California"), 9),]
?sample
#Sample the data
california_burritos <- burrito[sample(nrow(burrito), 9),]
#-
library(dplyr)
#Sample the data
new_df <- burrito %>% group_by(Burrito) %>% sample_n(5)
burrito
setwd("C:\\Users\\ericv\\Documents\\Github\\burrito")
burrito <- read.csv("burrito_cleaned.csv")
#Sample the data
california <- burrito[which(burrito$Burrito == "California", ]
#Sample the data
california <- burrito[which(burrito$Burrito == "California"), ]
head(california)
california <- california[sample(nrow(california), 10),]
california <- california[sample(nrow(california), 9),]
california
set.seed(777)
setwd("C:\\Users\\ericv\\Documents\\Github\\burrito")
burrito <- read.csv("burrito_cleaned.csv")
california <- california[sample(nrow(california), 9),]
# Sample the data
burrito$a_binary <- ifelse(burrito$Burrito == "California", 1, 0)
